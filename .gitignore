# Mac-OS Trash
*.DS_Store

# Prerequisites
*.d

# C/C++ build artifacts (optional, depending on your setup)
*.o
*.a
*.elf
*.bin
*.hex
*.lst
*.map

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# For PCBs designed using KiCad: https://www.kicad.org/
# Format documentation: https://kicad.org/help/file-formats/

# Temporary files
*.000
*.bak
*.bck
*.kicad_pcb-bak
*.kicad_sch-bak
*-backups
*.kicad_prl
*.sch-bak
*~
_autosave-*
*.tmp
*-save.pro
*-save.kicad_pcb
fp-info-cache

# Netlist files (exported from Eeschema)
*.net

# Autorouter files (exported from Pcbnew)
*.dsn
*.ses

# PlatformIO
#
# Build environments, temporary folders, and generated files
.pio/
.pioenvs/
.piolibdeps/
.cache/
.vscode/.browse.c_cpp.db
**/.pioenvs
**/.piolibdeps

# PlatformIO's own .gitignore that may be auto-generated in subfolders
.gitignore

# VS Code
#
# User-specific settings, caches, and build folders
.vscode/
# The line above ignores the entire .vscode folder.
# If you want to share specific settings with the team,
# you can un-comment the lines below to keep them.
# !.vscode/extensions.json
# !.vscode/settings.json
# !.vscode/launch.json
# !.vscode/tasks.json

# If you use the Arduino framework, PlatformIO may create a
# 'libdeps' folder. It is already covered by .piolibdeps.
#
# In a multi-folder workspace, PlatformIO might create .vscode
# in subfolders.
# **/.vscode/

# Operating System generated files
.DS_Store
Thumbs.db
Desktop.ini
